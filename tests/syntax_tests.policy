// SYNTAX TEST "source.java-policy" "Java policy test cases"

// foo
// <- source.java-policy comment.line.double-slash.java-policy

keystore "file:/C:/mykeystore";
// <-------- keyword.other.java-policy
//       ^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.java-policy
//                            ^ punctuation.terminator.statement.java-policy

keystore "url", "type", "provider";
//       ^^^^^ string.quoted.double.java-policy
//            ^ punctuation.separator.delimiter.java-policy
//              ^^^^^^ string.quoted.double.java-policy
//                    ^ punctuation.separator.delimiter.java-policy
//                      ^^^^^^^^^^ string.quoted.double.java-policy

keystorePasswordURL "file:/C:/keystore.password";
// <------------------- keyword.other.java-policy
//                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ string.quoted.double.java-policy
//                                              ^ punctuation.terminator.statement.java-policy

grant {
// <----- keyword.other.java-policy
//    ^ punctuation.section.group.begin.java-policy
};
// <- punctuation.section.group.end.java-policy
// <~- punctuation.terminator.statement.java-policy

grant signedBy "me" {
// <----- keyword.other.java-policy
//    ^^^^^^^^ keyword.other.java-policy
//             ^^^^ string.quoted.double.java-policy
//                  ^ punctuation.section.group.begin.java-policy
};
// <- punctuation.section.group.end.java-policy

grant signedBy "me", codeBase "url",
//                 ^ punctuation.separator.delimiter.java-policy
    principal lorem.ipsum "cn=Bob"
//            ^^^^^ support.class.java-policy
//                 ^ punctuation.separator.java-policy
//                  ^^^^^ support.class.java-policy
{
};

grant principal "bob" {
//    ^^^^^^^^^ keyword.other.java-policy
  permission java.io.FilePermission "C:\\foo.txt", "read";
//           ^^^^ support.class.java-policy
//               ^ punctuation.separator.java-policy
//                ^^ support.class.java-policy
//                  ^ punctuation.separator.java-policy
//                   ^^^^^^^^^^^^^^ support.class.java-policy
//                                     ^^ constant.character.escape.java-policy
//                                               ^ punctuation.separator.delimiter.java-policy
//                                                       ^ punctuation.terminator.statement.java-policy
  permission java.io.FilePermission "${user.home}", "read,write";
//                                   ^^^^^^^^^^^^ meta.template.expression.java-policy
//                                   ^^ punctuation.definition.template-expression.begin.java-policy
//                                     ^^^^ meta.definition.variable.name.java-policy
//                                         ^ punctuation.accessor.java-policy
//                                          ^^^^ meta.definition.variable.name.java-policy
//                                              ^ punctuation.definition.template-expression.end.java-policy
  permission HighScorePermission "*", signedBy "me";
//                                ^ variable.language.wildcard.java-policy
//                                    ^^^^^^^^ keyword.other.java-policy
  permission BarPermission "${{self}}";
//                          ^^^^^^^^^ meta.template.expression.java-policy
  permission BarPermission "${{alias:foo_bar}}";
//                                  ^ punctuation.separator.key-value.java-policy
//                                   ^^^^^^^ meta.definition.variable.name.java-policy

  permission javax.crypto.CryptoPermission "DES", 64;
//                                                ^^ constant.numeric.java-policy
  permission javax.crypto.CryptoPermission *, "KeyRecovery";
//                                         ^ variable.language.wildcard.java-policy
};
